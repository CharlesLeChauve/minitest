<ALPHA> ::= a|b|c|...|Z                           // echo a // echo B
<DIGIT> ::= 0|1|2|...|9                           // echo 1 // echo 9
<NUMBER> ::= <DIGIT> | <NUMBER> <DIGIT>           // echo 1 // echo 123
<WORD> ::= <ALPHA> | <WORD> <ALPHA> | <WORD> '_'  // echo word_1 // echo another_word
<WORD-LIST> ::= <WORD> | <WORD-LIST> <WORD>       // echo word1 word2 // echo word1 word2 word3
<ASSIGNMENT-WORD> ::= <WORD> '=' <WORD>           // myVar=value // anotherVar=anotherValue

<REDIRECTION> ::= '>' <WORD>                      // echo hello > file.txt
                | '<' <WORD>                      // sort < unsorted.txt
                | <NUMBER> '>' <WORD>             // 2> error.log
                | <NUMBER> '<' <WORD>             // 0< input.txt
                | '>>' <WORD>                     // echo hello >> file.txt
                | <NUMBER> '>>' <WORD>            // 2>> errors.log
                | '<<' <WORD>                     // cat << EOF
                | <NUMBER> '<<' <WORD>            // 0<< inputFile
                | '<&' <NUMBER>                   // 0<&1
                | <NUMBER> '<&' <NUMBER>          // 2<&1
                | '>&' <NUMBER>                   // 1>&2
                | <NUMBER> '>&' <NUMBER>          // 2>&1
                | '<&' <WORD>                     // <&inputFile
                | <NUMBER> '<&' <WORD>            // 0<&inputFile
                | '>&' <WORD>                     // >&outputFile
                | <NUMBER> '>&' <WORD>            // 1>&outputFile
                | '<<-' <WORD>                    // <<-EOF
                | <NUMBER> '<<-' <WORD>           // 0<<-EOF
                | '>&' '-'                        // >&-
                | <NUMBER> '>&' '-'               // 2>&-
                | '<&' '-'                        // <&-
                | <NUMBER> '<&' '-'               // 0<&-
                | '&>' <WORD>                     // &>allOutput.log
                | <NUMBER> '<>' <WORD>            // 0<> file
                | '<>' <WORD>                     // <> file
                | '>|' <WORD>                     // >| file
                | <NUMBER> '>|' <WORD>            // 2>| file

...

<CASE-COMMAND> ::= case <WORD> in esac            // case $var in esac
                 | case <WORD> in <CASE-CLAUSE-SEQUENCE> esac // case $var in pattern) ;; esac

...

<PIPELINE> ::= <COMMAND>                          // ls
          | <PIPELINE> '|' <COMMAND>              // ls | sort
